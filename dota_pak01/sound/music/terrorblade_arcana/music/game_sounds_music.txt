//arcana music

"terrorblade_arcana.music.killed"
{
	"channel"		"CHAN_AUTO"
	"volume"		"1.0"
	"soundlevel"	"SNDLVL_NONE"
	"pitch"			"PITCH_NORM"

	"wave"	"#music/terrorblade_arcana/music/killed.mp3"

	"operator_stacks"
	{	
		"soundentry_operator_data"
		{
			"track_data"
			{
				"start_point" "0.00"
//				"end_point" "9.61"
//				"track_name" "stinger_high_priority"
				"track_name" "dead"
				//"sync_track_name" "main"
//				"track_priority" "50"	
				"track_priority" "55"	
				"syncpoints"
				{
					"syncpoints_1"
					{
						"1" "1.118"
					}
				}
				"override_priority" "false"	
			}
		}
		
		"prestart_stack" //replaces null.wav
 		{
 			"sync_track_syncpoints"
 			{
 				"operator" "track_queue"
 				"syncpoint_list" "syncpoints_1"
 			}
 		}
		
		"start_stack"
		{
			"get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************TRANSITION TO DEATH MUSIC STARTED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}
			
			"limit_sound_laning"
			{
				"operator" "sys_stop_entries"
				"input_max_entries" "0.000000" //A sound will not stop itself from playing.
				"match_entity" "false"	
				"match_substring" "true"
				"match_entry" ".music.laning"
			}
			
			"limit_sound_battle"
			{
				"operator" "sys_stop_entries"
				"input_max_entries" "0.000000" //A sound will not stop itself from playing.
				"match_entity" "false"	
				"match_substring" "true"
				"match_entry" ".music.battle" //We allow no instances of battle when the death stinger knells		
			}
			
			"stop_main_track"
			{
				"operator" "track_stop"
				"track_name" "main"
			}

			// from .dead
			"import_stack" "dota_start_music_type_tracker"
			
			"add_music_value"
			{
				"input2" "16" //Dead
			}
			
            "get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************DEATH MUSIC STARTED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}

		}
			
		"update_stack"
		{
			"import_stack" "dota_update_death_music_track_update"
			"update_track"
			{
//				"autoqueue_entry_at_end_point" "valve_dota_001.music.dead"
				"stop_channel_on_track" "true"	
			}
			"volume_fade_out"
			{
				"input_max" "4"
 			}
						
			"block_entry_time_calc"
			{
				"operator" "math_float"
				"apply"	"add"
				"input1" "0.2"
				"input2" "@elapsed_time.output_sound_elapsed"
			}
			
			"block_entries"
			{
				"operator" "sys_block_entries"
				// "execute_once" "true"
				"input_active" "1.0"	
				"input_duration" "@block_entry_time_calc.output" //in seconds, you can use "@get_random.output" for a random blocking period
				"match_substring" "true"
				"match_entry" ".music.killed" //The sound entry to use
				"match_channel" "false"
				"match_entity" "false"
			}
		}
		"stop_stack"
		{
			"import_stack" "dota_stop_music_type_tracker"
			
			"remove_music_value"
			{
				"input2" "16" //Dead, this values is pushed with the death stinger.
			}	
			
            "get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************DEATH MUSIC KILLED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}
		}
	}
}
