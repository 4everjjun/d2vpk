// stingers
X "DMTemp_Hero.Respawn" // stinger
"dota_update_default" // does some fanciness as well

X"valve_dota_001.music.killed" // all kinds of madness in here
"dota_update_death_music"

? buy backs
"DMTemp_Hero.BuyBack" // stinger
"dota_update_default" // does some fanciness as well
"DMTemp_Hero.BuyBackOther" //other buys back
"dota_update_default" // does some fanciness as well
"DMTemp_Hero.BuyBackOtherRadiant" //other buys back
"dota_update_default" // does some fanciness as well
"DMTemp_Hero.BuyBackOtherDire" //other buys back

"DMTemp_Hero.Reincarnate" // plays spatialized when hero reincarnates - SK's ulti or Aegis holder
"dota_update_default"

GANKED happens:
"DMTemp.StateGankedMusic"

"valve_dota_001.music.ganked_sml" // has audio
"import_stack" "dota_update_default"		

"valve_dota_001.music.ganked_med" // has audio
"import_stack" "dota_update_default"	

"valve_dota_001.music.ganked_lg" // has audio
"import_stack" "dota_update_default"	

GANK DOES NOT:
"DMTemp.StateGankMusic"

"DMTemp.GankMusicSm" //0.15 - 0.45 // has audio
"import_stack" "dota_update_default"		

"DMTemp.GankMusicMd" //0.45 - 0.8 // has audio
"import_stack" "dota_update_default"	


"DMTemp.GankMusicLg" //0.8 - 1.0 // has audio
"import_stack" "dota_update_default"	

TOWER FALLS (doesn't currently happen)

"DMTemp_Stinger_Our_Radiant_Tower_Fallen" // blocks itself for 15 sec
"start_barracks_cooldown"
"DMTemp_Stinger_Our_Dire_Tower_Fallen"
"DMTemp_Stinger_Their_Radiant_Tower_Fallen"
"DMTemp_Stinger_Their_Dire_Tower_Fallen"

// does nothing
"DMTemp_barracks_fall_01"
"DMTemp_barracks_fall_02"
"DMTemp_barracks_fall_03"
"DMTemp_barracks_fall_04"

VICTORY/DEFEAT: needs separation from tail

"DMTemp_Victory_Radiant"
"import_stack" "dota_update_default"
"DMTemp_Victory_Dire"
"import_stack" "dota_update_default"
"DMTemp_Defeat_Dire"
"import_stack" "dota_update_default"
"DMTemp_Defeat_Radiant"
"import_stack" "dota_start_music_type_tracker"
"DMTemp_Diretide_Finale"
"import_stack" "dota_update_default"

"valve_dota_001.music.dead" // fanciness
"import_stack" "dota_update_death_music"



MUSIC:

"DMTemp.GameStartup"
"dota_update_music_stereo" // does tricky stuff if worldmap
"valve_dota_001.music.ui_main" // ditto
"DMTemp.WorldMap" // stops game startup and starts worldmap... trickyness
"valve_dota_001.music.ui_world_map" // worldmap simple entry
"DMTemp.MainLoop" //A loop that runs at all times and does a bunch of music-related utility stuff
"DMTemp.MainLoopTutorial" //A loop that runs at all times and does a bunch of music-related utility stuff
"valve_dota_001.music.countdown"
"import_stack" "dota_update_music_stereo"

"DMTemp_Stinger.003"
"DMTemp_Stinger.004"
"DMTemp_Stinger.005"
"DMTemp_Stinger.006"
"DMTemp_Stinger.007"
"DMTemp_Stinger.008"
"DMTemp_Stinger.009"


// events
"greevil_eventstart_Stinger"
"greevil_eventend_Stinger"
"greevil_receive_present_Stinger"
"greevil_camp_respawn_Stinger"
"greevil_mega_spawn_Stinger"
"greevil_loot_spawn_Stinger"
"greevil_loot_death_Stinger"
"diretide_eventstart_Stinger"
"diretide_select_target_Stinger"
"diretide_sugarrush_Stinger"
"diretide_roshdeath_Stinger"


//MUSIC
"valve_dota_001.music.ui_hero_select"
"import_stack" "dota_update_music_stereo"
"DMTemp.HeroPicker.INTERNATIONAL"
"import_stack" "dota_update_music_stereo"

"DMTemp.StateLaningMusic" // just a program
"DMTemp.LaningMusic_Picker_Day" // variation selection day
"DMTemp.LaningMusic_Picker_Night" // variation selection night



"DMTemp.LaningMusicTutorial_01" //Laning 01 music master

"DMTemp.LaningMusicTutorial_01_Layer_01"
"DMTemp.LaningMusicTutorial_01_Layer_02"
"DMTemp.LaningMusicTutorial_01_Layer_03"

"DMTemp.LaningMusicTutorial_02" //Laning 01 music master

"DMTemp.LaningMusicTutorial_02_Layer_01"
"DMTemp.LaningMusicTutorial_02_Layer_02"

"DMTemp.LaningMusicTutorial_01" //Laning 01 music master

"DMTemp.LaningMusicTutorial_01_Layer_01"
"DMTemp.LaningMusicTutorial_01_Layer_02"
"DMTemp.LaningMusicTutorial_01_Layer_03"


"DMTemp.BattleMusic_Epic" //Battle music request from the game
"DMTemp.StateBattleMusic"
"DMTemp.BattleMusic_Epic_Picker"
"DMTemp.BattleMusic_Epic_End"

"valve_dota_001.music.battle_01"
"valve_dota_001.music.battle_01_end"
"valve_dota_001.music.battle_02"
"valve_dota_001.music.battle_02_end"
"valve_dota_001.music.battle_03"
"valve_dota_001.music.battle_03_end"


"valve_dota_001.music.battle_end_countdown" // uses prestart
"wave"			"*#music\DOTA2_Music_Battle_001_End.mp3"
"dota_update_music_stereo"

ROSHAN:

"DMTemp.StateRoshanMusic"

"valve_dota_001.music.roshan"
"import_stack" "dota_opvar_smoothing_update"

"DMTemp.StateRoshanKilled"


"valve_dota_001.music.roshan_end"
"import_stack" "dota_update_music_stereo"

SMOKE:

"DMTemp.StateSmokePopped"

"valve_dota_001.music.smoke" // has audio
"import_stack" "dota_update_music_stereo"

"DMTemp.StateSmokeEndedHero"

"valve_dota_001.music.smoke_end_hero" // has audio
"import_stack" "dota_update_music_stereo"

"DMTemp.StateSmokeEndedTower"

"valve_dota_001.music.smoke_end_tower" // has audio
"import_stack" "dota_update_music_stereo"

"DMTemp.StateSmokeEndedCreep"

"valve_dota_001.music.smoke_end_creep" // has audio
"import_stack" "dota_update_music_stereo"


//BLOCKSTART //Tutorial
"Tutorial_1.Intro" //When the tutorial first starts
"Tutorial.Start" 
"Tutorial.End" //At the end of the tutorial

"Tutorial.Shopkeeper_01" //When you first meet the shopkeeper
"Tutorial.Shopkeeper_02" //When you complete your first big item (bracer ATM)
"Tutorial.Quest.complete_01" //stinger When you complete mini quests within the tutorial
"Tutorial.KOTL" //when you meet Keeper of the Light
"Tutorial.Razor" //When you make Razor appear
"Tutorial.Tidehunter.Appear"
"Tutorial.Tidehunter.Escape"
"Tutorial.Tidehunter.Death"
"DMTemp.Tutorial_Ducker"


"Spectator.HeroDeath" //When a hero dies
"Spectator.RoshanFight" //Fighting Roshan // has audio
"Spectator.RoshanFightToggle"
"Spectator.RoshanFightClient"
"Spectator.RoshanDeath"
"Spectator.AncientKilled" //When you first meet the shopkeeper // has audio


/////////////////////// UNUSED ////////////////////////////

"DMTemp.LaningMusic_01"
"import_stack" "dota_update_music_stereo"


"DMTemp.LaningMusic_02" //Layered explore music master

"DMTemp.LaningMusic_Layered_001_Layer01_pt1"
"DMTemp.LaningMusic_Layered_001_Layer01_pt2"
"DMTemp.LaningMusic_Layered_001_Layer01_pt3"
"DMTemp.LaningMusic_Layered_001_Layer01_pt4"
"DMTemp.LaningMusic_Layered_001_Layer02_pt1"
"DMTemp.LaningMusic_Layered_001_Layer02_pt2"
"DMTemp.LaningMusic_Layered_001_Layer02_pt3"
"DMTemp.LaningMusic_Layered_001_Layer02_pt4"
"DMTemp.LaningMusic_Layered_001_Layer03_pt1"
"DMTemp.LaningMusic_Layered_001_Layer03_pt2"
"DMTemp.LaningMusic_Layered_001_Layer03_pt3"
"DMTemp.LaningMusic_Layered_001_Layer03_pt4"

"DMTemp.LaningMusic_03" //Layered explore music master

"DMTemp.LaningMusic_Layered_002_Layer01_pt1"
"DMTemp.LaningMusic_Layered_002_Layer01_pt2"
"DMTemp.LaningMusic_Layered_002_Layer01_pt3"
"DMTemp.LaningMusic_Layered_002_Layer01_pt4"
"DMTemp.LaningMusic_Layered_002_Layer02_pt1"
"DMTemp.LaningMusic_Layered_002_Layer02_pt2"
"DMTemp.LaningMusic_Layered_002_Layer02_pt3"
"DMTemp.LaningMusic_Layered_002_Layer02_pt4"
"DMTemp.LaningMusic_Layered_002_Layer02_pt5"
"DMTemp.LaningMusic_Layered_002_Layer03_pt1"
"DMTemp.LaningMusic_Layered_002_Layer03_pt2"
"DMTemp.LaningMusic_Layered_002_Layer03_pt3"
"DMTemp.LaningMusic_Layered_002_Layer03_pt4"


"DMTemp.LaningMusic_01" //Laning 01 music master

"DMTemp.LaningMusic_01_Layer_01_pt_01"
"DMTemp.LaningMusic_01_Layer_01_pt_02"
"DMTemp.LaningMusic_01_Layer_01_pt_03"
"DMTemp.LaningMusic_01_Layer_01_pt_04"
"DMTemp.LaningMusic_01_Layer_01_pt_05"
"DMTemp.LaningMusic_01_Layer_02_pt_01"
"DMTemp.LaningMusic_01_Layer_02_pt_02"
"DMTemp.LaningMusic_01_Layer_02_pt_03"
"DMTemp.LaningMusic_01_Layer_02_pt_04"
"DMTemp.LaningMusic_01_Layer_02_pt_05"
"DMTemp.LaningMusic_01_Layer_03_pt_01"
"DMTemp.LaningMusic_01_Layer_03_pt_02"
"DMTemp.LaningMusic_01_Layer_03_pt_03"
"DMTemp.LaningMusic_01_Layer_03_pt_04"
"DMTemp.LaningMusic_01_Layer_03_pt_05"
"DMTemp.LaningMusic_01_Layer_03_pt_06"



//arcana stingers

"valve_dota_001.music.killed.Terrorblade"
{
	"channel"		"CHAN_AUTO"
	"volume"		"1.0"
	"soundlevel"	"SNDLVL_NONE"
	"pitch"			"PITCH_NORM"

	"wave"	"#music/stingers/arcana/tb/death.mp3"

	"operator_stacks"
	{	
		"soundentry_operator_data"
		{
			"track_data"
			{
				"start_point" "0.00"
				"track_name" "stinger_high_priority"
				//"sync_track_name" "main"
				"track_priority" "50"	
				"syncpoints"
				{
					"syncpoints_1"
					{
						"1" "1.118"
					}
				}
				"override_priority" "false"	
			}
		}
		
		"prestart_stack" //replaces null.wav
 		{
 			"sync_track_syncpoints"
 			{
 				"operator" "track_queue"
 				"syncpoint_list" "syncpoints_1"
 			}
 		}
		
		"start_stack"
		{
			"get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************TRANSITION TO DEATH MUSIC STARTED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}
			
			"limit_sound_explore"
			{
				"operator" "sys_stop_entries"
				"input_max_entries" "0.000000" //A sound will not stop itself from playing.
				"match_entity" "false"	
				"match_substring" "true"
				"match_entry" "DMTemp.Explore" //We allow no instances of Explore when the death stinger knells		
			}
			
			"limit_sound_laning"
			{
				"operator" "sys_stop_entries"
				"input_max_entries" "0.000000" //A sound will not stop itself from playing.
				"match_entity" "false"	
				"match_substring" "true"
				"match_entry" "DMTemp.Laning"
			}
			
			"limit_sound_battle"
			{
				"operator" "sys_stop_entries"
				"input_max_entries" "0.000000" //A sound will not stop itself from playing.
				"match_entity" "false"	
				"match_substring" "true"
				"match_entry" "DMTemp.BattleMusic" //We allow no instances of battle when the death stinger knells		
			}
			
			"stop_main_track"
			{
				"operator" "track_stop"
				"track_name" "main"
			}
		}
			
		"update_stack"
		{
			"import_stack" "dota_update_death_music"
			"mixer"
			{
				"mixgroup" "Music"
			}
			"update_track"
			{
				"operator" "track_update"
				"autoqueue_entry_at_end_point" "valve_dota_001.music.dead"
				"stop_channel_on_track" "true"	
			}
		}
	}
}

"DMTemp_Hero.Respawn.Terrorblade"
{
	"channel"		"CHAN_AUTO"
	"volume"		"0.8"
	"soundlevel"	"SNDLVL_NONE"
	"pitch"			"PITCH_NORM"

	"wave"			"#music/stingers/arcana/tb/respawn.mp3"
	"soundentry_version" "2"
	"operator_stacks"
	{	
		"soundentry_operator_data"
		{
			"track_data"
			{
				"start_point" "0.00"
				"track_name" "main"
				"track_priority" "60"	
			}
		}
		
		"start_stack"
		{
			"delay_output"
            {
             "operator" "sys_output"
             "input_float" "1.0"
             "output" "delay"
            }
			
			"import_stack" "dota_start_music_type_tracker"
			
			"stop_death_track"
			{
				"operator" "track_stop"
				"track_name" "dead"
			}
			
			"stop_stinger_track"
			{
				"operator" "track_stop"
				"track_name" "stinger_high_priority"
			}
				
			"add_music_value"
			{
				"input2" "32" //Respawn Value
			}
			
            "get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************RESPAWN MUSIC STARTED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}
		}
		
		"update_stack"
		{
			"import_stack" "dota_update_default"
			"mixer"
			{
				"mixgroup" "Stingers"
			}
			"speakers_spatialize"
			{
				"input_radius"  "1000"
			}
			"update_track"
			{
				"operator" "track_update"
				"stop_channel_on_track" "true"	
			}
			
			"stop_death_track"
			{
				"operator" "track_stop"
				"track_name" "dead"
			}
		}
		
		"stop_stack"
		{	
			"import_stack" "dota_stop_music_type_tracker"
			
			"remove_music_value"
			{
				"input2" "32" //Respawn
			}	
			
            "get_debug_printing_opvar" 
            {
				"operator" "get_opvar_float"
				"opvar" "debug_print_music"
			}
			
			"**************RESPAWN MUSIC KILLED**************" 
			{
				"execute_once" "false"
				"input_execute"	"@get_debug_printing_opvar.output"
				"operator" "util_print_float"
				"input" "1.0"
			}
		}
	}
}
